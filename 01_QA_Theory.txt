QA теория. 

1. Что подразумевается под тестовой средой?
Тестовая среда - окружение (железо и ПО), где можно проверять созданный или доработанный функционал, проводить тесты.

2. В чем отличие build от release?
Билд - это сборка, которая создается по требованию/автоматически для разработки и тестирования. Релиз - это билд, который предоставляется наружу - клиенту, конечному пользователю. 

3. Основные фазы тестирования?
	* Pre-alpha
	* Alpha
	* Beta
	* Release-candidate
	* Release

4. Что такое импакт анализ?
Исследование мест программы, которое указывает на места в продукте, затронутые при разработке новой фичи или доработке старой функциональности. Важен, так как затронутые части требуют большего внимания при тестировании. Также полезен тем, что позволяет понять, что было не затронуто новой фичей, а это помогает в планировании регрессии.

5. Критерии выбора тестов?
	* Достаточность (конечное количество тестов, достаточное для тестирования фичи)
	* Полнота (например, есть ли тест на проверку работоспособности сообщения об ошибке)
	* Надежность
	* Проверяемость

6. Принципы тестирования?
	* Тестирование показывает наличие дефектов, но не их отсутствие
	* Исчерпывающее тестирование недостижимо
	* Тестирование должно начинаться как можно раньше
	* Скопление дефектов - баги кучкуются. Принцип Парето: 80% багов в 20% модулей.
	* Парадокс пестицида - одни и те же тесты со временем находят все меньше ошибок
	* Тестирование зависит от контекста (медпродукт тестируется дольше и глубже, соцсеть - проверки на нагрузку)
	* Заблуждение об отсутствии ошибок (можно пройти все тест кейсы без ошибок, но это не доказывает, что само существование этого продукта - не ошибка)

7. Что такое независимое тестирование?
Тестирование силами компании или группы людей, которую привлекли дополнительно (они не участвовали в разработке продукта).  

8. Что такое тестирование со сдвигом влево?
Подход к тестированию, при котором тестирование выполняется на более раннем этапе жизненного цикла разработки ПО.
Преимущества: сокращение затрат, более высокое качество, повышение эффективности, конкурентные преимущества.

9. Почему тестирование делится на отдельные этапы?
	* каждый из этапов имеет свое назначение
	* проще управлять поэтапно
	* возможность запуска разных тестов в разных средах
	* улучшаются производительность и качество тестирования

10. Какие есть этапы тестирования?
	* общее планирование и анализ требований
	* уточнение критериев приемки
	* уточнение стратегии тестирования
	* разработка тест-кейсов
	* выполнение тескт-кейсов
	* фиксация найденых дефектов
	* анализ результатов тестирования
	* отчетность

11. Как вы тестируете продукт, если требования еще не зафиксированы?
План тестирования может быть создан на остнове предположений, которые должны тщательно документироваться.

12. Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?
Проверим, охватывает ли каждое из требований хотябы один тест кейс.

13. Что подразумевается под тестовыми данными? 
Набор входных значений, необходимых для выполнения тест кейсов.

14. Что такое бета-тестирование?
Тестирование на конечных пользователях.

15. Что означает пилотное тестирование? (Pilot)
Тип тестирования ПО, который проверяет компонент системы или всю систему в режиме реального времени. Группа конечных пользователей пробует тестируемую систему и предоставляет обратную связь до полного развертывания системы.

16. Что такое бизнес – логика?
То, что программа должна делать по задумке.

17. Какие существуют основные виды тестирования ПО?
	* функциональные
		- функциональное тестирование
		- GUI
		- взаимодействия
	* нефункциональное
		- интерфейсов		
		- юзабилити
		- локализации
		- конфигурационное
		- совместимости
		- документации
		- отказ и восстановление		
		- установки (инсталяционное)
		- безопасности 
		- производительности (емкости, стрессовое, нагрузочное, объемное, выносливости, стабильности, шиповое, отказоустойчивости, масштабируемости)
	* связанное с изменениями
		- регрессионное
		- санитарное
		- дымовое
		- тестирование сборки

18. Методы тестирования?
	* черный ящик
	* белый ящик
	* серый ящик

19. Что такое пирамида / уровни тестирования?
Группировка тестов ПО по разным уровням детализации.
    /\
   /UI\		* Тесты пользовательского интерфейса
  /API \	* Сервисные тесты
 / UNIT \	* Юнит-тесты
/________\

20. Что такое деструктивное/разрушающее/негативное тестирование? (DT — Destructive testing)
Тип тестирования для поиска точек отказа в ПО, проверяет систему на обработку исключительных ситуаций (некорректные данные), проверяет срабатывание вызываемых функций.

21. Что такое недеструктивное/неразрушающее/позитивное тестирование? (NDT – Non Destructive testing)
Тип тестирования, включающий в себя правильное взаимодействие с ПО.

22. Что подразумевается под компонентным/модульным/юнит тестированием? (Component/Module/Unit testing)
Уровень, используемый для тестирования какого-либо одного логически выделенного и изолированного элемента системы (методом белого ящика, чаще всего разработчиком). 

23. Что подразумевается под интеграционным тестированием?
Уровень, предназначенный для проверки насколько хорошо два или более модулей ПО взаимодействуют друг с другом, а также взаимодействия с другими частями системы.

24. Разница между Unit testing и Integration testing?
Интеграционные тесты используют:
	* базу данных
	* сеть для вызова другого компонента
	* внешнюю систему (очередь/почтовый сервер)
	* читает/записывает файлы (лбо другие операции ввода-вывода)
	* полагается не на исходный код, а на бинарник приложения
Юнит-тесты:
	* легче поддерживать
	* легко воспроизводят пограничные случаи/редкие ситуации
	* выполняются гораздо быстрее
	* сбойные юнит-тесты легче исправить

25. Что такое системное интеграционное тестирование? (SIT — System Integration testing) 
Тип, проводимый в интегрированной аппаратной и программной среде для проверки поведения всей системы.

26. В чем разница между тест-драйвером и тест-заглушкой? (Test Driver and Test Stub)
Тест-драйвер - фрагмент кода, который вызывает тестируемый программный компонент. Драйвер вызывает модуль для тестирования.
Тест-заглушка - фиктивная программа, которая интегрируется с приложением для полной функциональности. Заглушка вызывается тестируемым модулем.

27. Что подразумевается под системным тестированием?
Системное тестирование рассматривает тестируемую систему в целом и оперирует на уровне пользовательских интерфейсов. 
(В отличие от последних фаз интеграционного тестирования, которое оперирует на уровне интерфейсов модулей).
ПРоизводится методом черного ящика, структура программы не имеет значения, для проверки доступны входы и выходы, видимые пользователю.

28. Что такое функциональное тестирование?
Это тестирование ПО в целях проверки реализуемости функциональных требований, то есть способности ПО в определённых условиях решать задачи, нужные пользователям.
ФТ рассматривает заранее указанное поведение и основывается на анализе спецификаций функциональности компонента или системы в целом.

29. Что такое тестирование совместимости/взаимодействия? (Compatibility/Interoperability testing)
ТВ - функциональное тестирование, проверяющее способность приложения взаимодействовать с одним и более компонентами и включает в себя тестирование совместимости и интеграционное тестирование.

30. Что такое тестирование на соответствие? (Conformance/Compilance testing)
Тип тестирования, который удостоверяет, что система ПО соответствует стандартам и правилам, определенным IEEE, W3C или ETSI.

31. Что такое нефункциональное тестирование?
Тип тестирования для проверки нефункциональных аспектов ПО. 
Включает тестирование интерфейсов, юзабилити, локализации, конфигурационное, совместимости, документации, отказ и восстановление, установки (инсталяционное), безопасности, производительности и т.д.

32. Что вы знаете о Тестировании удобства пользования?
Метод тестирования, направленный на установление степени удобства использования, обучаемости, понятности и привлекательности для пользователей.
Дает оценку уровня удобства по производительности и эффективности (сколько времени юзеру нужно для решения задачи в приложении), правильности (сколько ошибок сделал юзер во время работы), активизация в памяти (повторное выполнение действий у старого юзера должно проходить быстрее чем у нового), эмоциональная реакция (испытает ли юзер стресс после выполнения задачи).

33. Отличия тестирование на удобство пользования и тестирования доступности? (Usability Vs. Accessibility testing)
Тестирование удобства показывает, насколько проста в использовании и удобна система, а тестирование доступности - насколько система удобна для людей с ограниченными возможностями (слух, зрение, ограничения в подвижности рук и т.д.) 

34. Что такое тестирование интерфейса?
Интеграционный тест, который проверяет, правильно ли установлена связь между двумя различными программными системами или их частями. Соединение, которое объединяет 2 компонента называется интерфейсом (API, веб-сервисы и т.д.).
Тестирование двух основных сегментов:
	* интерфейс веб-сервера и сервера приложений
	* интерфейс сервера приложений и БД

35. Что такое тестирование рабочего процесса/воркфлоу? (Workflow testing)
Тип тестирования, проверяющий, что каждый воркфлоу ПО точно отражает данный бизнес-процесс.
Воркфлоу - серия задач для получения желаемого результата, которая обычно включает несколько этапов или шагов.

36. Что вы знаете о пользовательском приемочном тестировании? (UAT – User Acceptance testing)
Тип тестирования, выполняемый конечным пользователем или клиентом для проверки/принятия ПО перед его размещением в Production.Выполняется на заключительном этапе (после функциональных, интеграционных и системных испытаний).

37. Что такое эксплуатационное приемочное тестирование? (OAT — Operational Acceptance testing)
Тип тестирования, оценивающий операционную готовность ПО до его выпуска в производство. Цель: обеспечение бесперебойной работы системы в ее стандартной операционной среде.

38. Что такое инсталляционное тестирование?
ИТ направлено на проверку успешной инсталяции и настройки, а также обновления и удаления ПО.

39. Что вы знаете о тестировании безопасности?
Тип тестирования, который выявляет уязвимости, угрозы и риски. Цель: выявление возможных лазеек и слабых мест, которые могут привести к потере информации, доходов, репутации компании, сотрудников, клиентов.
Три принципа:
	* конфиденциальность
	* целостность (ресурс моет быть изменен только в соответствии с полномочиями пользователя)
	* доступность (ресурсы должны быть доступны только авторизованному пользователю, внутреннему объекту/устройству)
Типы тестирования безопасности:
	* сканирование уязвимостей
	* сканирование безопасности
	* тестирование на проникновение
	* оценка рисков
	* аудит безопасности
	* этический взлом
	* оценка состояния

40. Что такое конфигурационное тестирование?
Вид тестирования, напрвленный на проверку работы ПО при различных аппаратных и программных конфигурациях системы. (Железо; тип, версия, битность ПО; тип и версия браузера и т.д.)

41. Объясните, что такое тестирование N+1
Вариант регрессии - несколько циклов, в которых ошибки, обнаруженные в цикле N, устраняются и повторно тестируются в цикле N+1.
Цикл повторяется, пока не будет найдено ни одной ошибки.

42. Что вы знаете о тестировании сборки? (Build Verification Test)
Тестирование, направленное на определение соответствия выпущенной версии критериям качества для начала тестирования.
По сути является дымовым тестом на приемку новой версии в дальнейшее тестирование или эксплуатацию.

43. Что такое тестирование потоков? (Thread testing)
Тип тестирования, проверяющий основные функциональные возможности конкретной задачи (потока):
	* однопоточное (включает одну транзакцию приложения за раз)
	* многопоточное (одновременно несколько активных транзакций)

44. Что вы знаете о мутационном тестировании? (Mutation testing)
Тип тестирования, в котором мы меняем определенные выражения в коде и проверяем, способны ли тест кейсы найти ошибки. 

45. В чем разница между Baseline и Benchmark testing?
Baseline предназначено для оценки производительности приложения. 
Benchmark сравнивает производительность приложения с отраслевым стандартом.
*
Baseline испльзует данные, собранные для повышения производительности.
Benchmark возвращает информацию о целевом приложении по сравнению с другими приложениями.
*
Baseline сравнивает текущую производительность с предыдущей.
Benchmark сравнивает производительность нашего приложения с приложениями конкурентов.

46. Что такое A/B тестирование?
(Также Split) - создание и анализ 2ух вариантов приложения, чтобы найти, какой из вариантов работает лучше с точки зрения пользовательского опыта, потенциальных клиентов и т.д.

47. Что означает сквозное тестирование? (E2E — End–to–End)
Стратегия тестирования, которая охватывает все возможные потоки приложения от его начала до конца. 
Цель: создание полного производственного сценария, выявление зависимостей и утверждение, что между различными программными модулямипередается правильный ввод.

48. В чем разница между E2E и системным тестированием?
E2E | Системное тестирование:
	* проверяет программную систему, а также взаимосвязи системы | только программную систему в соответствии с требованиями
	* проверяет весь E2E flow | проверяет функциональные возможности и функции системы
	* Все интерфейсы, бэкэнд системы | функциональное и нефункциональное тестирование
	* Выполняется после завершения системного тестирования | выполняется после интеграционного тестирования
	* проверка интерфейсов, сложных для автоматизации (приоритет ручного тестирования) | как ручное, так и автоматическое

49. Что такое параллельное тестирование? (Parallel testing)
Тип тестирования, который одновременно проверяет несколько приложений или подкомпонентов одного приложения, чтобы сократить время выполнения теста. 
(Например запустить 2 разные версии ПО с одним вводом, чтобы узнать, ведет ли себя старая и новая версия одинаково).

50. Чем AdHock тестирование отличается от Исследовательского тестирования?
В исследовательском тестировании присутствует документация. 
Ad-hoc может провести кто угодно, а для исследовательского необходимо мастерство и владение определенными техниками.

51. Что такое SDLC?
SDLC — это структура, определяющая задачи, выполняемые на каждом этапе процесса разработки программного обеспечения.
Процесс поэтапной разработки ПО, которому следуют в программных проектах.
Этапы:
	* требования
	* анализ
	* проектирование
	* разработка
	* тестирование
	* развертывание и обслуживания

53. Что такое авторизация, аутентификация, валидация, идентификация?
Авторизация - предоставление определенному лицу/группе лиц прав на выполнение определенных действий.
Аутентификация - процедура проверки и подтверждения подлинности, доказательство того, что пользователь действительно тот, за кого себя выдает.
Валидация - подтверждение того, что требования, предназначенные для конкретного использования/применения удовлетворены.
Идентификация - присвоение субъектам и объектам идентификатора, распознавание пользователя по его идентификатору.

54. Распишите жизненный цикл бага?
Новый
 \/
Назначен на
 \/
Открыт -> дубликат/отклонен/отсрочен/не баг
 \/
Исправлен
 \/
Повторное тестирование в режиме ожидания
 \/
Повторное тестирование -> переоткрыт -> к блоку "Назначен"
 \/
Проверен
 \/
Закрыт

Также возможны статусы:
Требуется дополнительная информация
В процессе исправления
Не может быть воспроизведен
На регрессионное тестирование